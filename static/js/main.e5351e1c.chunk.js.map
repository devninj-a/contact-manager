{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","brand","className","style","maxWidth","to","exact","activeStyle","fontWeight","defaultProps","ContactContext","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Contact","showDetails","handleDeleteContact","a","delete","Consumer","context","src","name","alt","fontSize","email","phone","onClick","bind","Contacts","Fragment","key","TextInputGroup","label","onChange","error","htmlFor","classnames","defaultProp","AddContact","errors","handleChange","e","target","handleSubmit","preventDefault","post","history","push","onSubmit","disabled","About","NotFound","EditContact","updateContact","match","params","put","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5351e1c.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = props => {\n  const { brand } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm bg-light mb-4\">\n      <div className=\"container\" style={{ maxWidth: '600px' }}>\n        <NavLink to=\"/\" className=\"navbar-brand\">\n          {brand}\n        </NavLink>\n        <div>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink\n                exact\n                to=\"/\"\n                className=\"nav-link\"\n                activeStyle={{ fontWeight: 'bold' }}\n              >\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                exact\n                to=\"/contact/create\"\n                className=\"nav-link\"\n                activeStyle={{ fontWeight: 'bold' }}\n              >\n                Add\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                exact\n                to=\"/about\"\n                className=\"nav-link\"\n                activeStyle={{ fontWeight: 'bold' }}\n              >\n                About\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  brand: 'My App'\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport const ContactContext = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n      break;\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n      break;\n\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <ContactContext.Provider value={this.state}>\n        {this.props.children}\n      </ContactContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactContext } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    showDetails: false\n  };\n\n  handleDeleteContact = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    const { contact } = this.props;\n    return (\n      <ContactContext.Consumer>\n        {context => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"row no-gutters\">\n                <div className=\"col-sm-2\">\n                  <img\n                    src={`https://ui-avatars.com/api/?length=1&name=${contact.name}&background=2196f3&color=fff&rounded=true&font-size=0.33`}\n                    alt=\"avatar\"\n                    className=\"mt-4 ml-3\"\n                  />\n                </div>\n                <div className=\"col-sm-10\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title mb-3\">\n                      {contact.name}\n                      <span\n                        className=\"text-muted ml-2\"\n                        style={{ fontSize: '0.8em' }}\n                      >\n                        {contact.email}\n                      </span>\n                    </h5>\n                    <h6\n                      className=\"card-subtitle text-muted mb-3\"\n                      style={{ fontSize: '0.8em' }}\n                    >\n                      {contact.phone}\n                    </h6>\n                    <Link\n                      to={`contact/edit/${contact.id}`}\n                      className=\"card-link\"\n                    >\n                      Edit\n                    </Link>\n                    <Link\n                      className=\"card-link\"\n                      onClick={this.handleDeleteContact.bind(\n                        this,\n                        contact.id,\n                        context.dispatch\n                      )}\n                    >\n                      Delete\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </ContactContext.Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { ContactContext } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <ContactContext.Consumer>\n        {context => {\n          return (\n            <React.Fragment>\n              <h4 className=\"text-dark mb-4\">Contact List</h4>\n              {context.contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </ContactContext.Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({ label, name, value, type, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control', {\n          'is-invalid': error\n        })}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProp = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { ContactContext } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n  handleSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name field is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email field is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone field is required' } });\n      return;\n    }\n\n    // create new contact\n    const contact = { name, email, phone };\n    const res = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      contact\n    );\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // reset form\n    this.setState({ name: '', email: '', phone: '', errors: {} });\n\n    // redirect to home page\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <ContactContext.Consumer>\n        {context => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.handleSubmit.bind(this, context.dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    value={this.state.name}\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    value={this.state.email}\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    value={this.state.phone}\n                    name=\"phone\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={\n                      !this.state.name || !this.state.email || !this.state.phone\n                    }\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </ContactContext.Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"text-dark\">About</h1>\n      <p>A simple contact manager app using React's context api</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>404</h1>\n      <p>Page not found</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { ContactContext } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  async componentDidMount() {\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`\n    );\n    const { name, email, phone } = res.data;\n    this.setState({ name, email, phone });\n  }\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n  handleSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name field is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email field is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone field is required' } });\n      return;\n    }\n\n    // edit contact\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // reset form\n    this.setState({ name: '', email: '', phone: '', errors: {} });\n\n    // redirect to home page\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <ContactContext.Consumer>\n        {context => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.handleSubmit.bind(this, context.dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    value={this.state.name}\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    value={this.state.email}\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    value={this.state.phone}\n                    name=\"phone\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Save\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={\n                      !this.state.name || !this.state.email || !this.state.phone\n                    }\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </ContactContext.Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header brand=\"Contact Manager\" />\n          <div className=\"container\" style={{ maxWidth: '600px' }}>\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route\n                exact\n                path=\"/contact/create\"\n                component={AddContact}\n              ></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}